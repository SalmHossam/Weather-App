pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'salmahossam20/weather-app'
        DOCKER_TAG = "${env.BUILD_NUMBER}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git url: 'https://github.com/SalmHossam/Weather-App.git', branch: 'main'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo 'Stopping and removing existing container...'
                    // Stop and remove any container using the previous image
                    sh """
                        docker ps -q --filter ancestor=${DOCKER_IMAGE}:${DOCKER_TAG} | xargs -r docker stop
                        docker ps -a -q --filter ancestor=${DOCKER_IMAGE}:${DOCKER_TAG} | xargs -r docker rm
                    """

                    echo 'Removing previous Docker image if it exists...'
                    // Remove previous image if it exists
                    sh "docker rmi -f ${DOCKER_IMAGE}:${DOCKER_TAG} || true"

                    echo 'Building Docker image...'
                    sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} Dockerfile ."

                    echo 'Logging into Docker registry...'
                    sh "docker login -u salmahossam20 -p Salma@12345"

                    echo 'Pushing Docker image to registry...'
                    sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
                }
            }
        }

        stage('Pull Docker Image') {
            steps {
                script {
                    echo 'Pulling Docker image from registry...'
                    // Pull the Docker image with the specific tag
                    sh "docker pull ${DOCKER_IMAGE}:${DOCKER_TAG}"
                }
            }
        }

        stage('Stop and Remove Previous Container') {
            steps {
                script {
                    echo 'Stopping and removing existing container...'
                    // Stop and remove any running container with the name 'weather-app-container'
                    sh """
                        docker stop weather-app-container || true
                        docker rm -f weather-app-container || true
                    """
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    echo 'Running Docker container...'
                    // Run the container with the pulled image
                    sh """
                        docker run -d -p 8090:80 --name weather-app-container ${DOCKER_IMAGE}:${DOCKER_TAG}
                    """
                }
            }
        }

        stage('Test') {
            steps {
                echo 'Testing the project...'
                // Test the running container
                sh 'curl http://localhost:8090'
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        success {
            echo 'Build and deployment successful.'
        }
        failure {
            echo 'Build or deployment failed.'
        }
    }
}
